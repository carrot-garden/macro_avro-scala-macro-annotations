/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.miguno.avro;  
//@SuppressWarnings("all")
//@org.apache.avro.specific.AvroGenerated

object SCHEMA {
  val SCHEMA$: org.apache.avro.Schema = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"twitter_schema\",\"namespace\":\"com.miguno.avro\",\"fields\":[{\"name\":\"username\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the user account on Twitter.com\"},{\"name\":\"tweet\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The content of the user's Twitter message\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Unix epoch time in seconds\"}],\"doc:\":\"A basic schema for storing Twitter messages\"}");

  def getClassSchema(): org.apache.avro.Schema = SCHEMA$
}  

class twitter_schema extends org.apache.avro.specific.SpecificRecordBase with org.apache.avro.specific.SpecificRecord {
  val SCHEMA$: org.apache.avro.Schema = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"twitter_schema\",\"namespace\":\"com.miguno.avro\",\"fields\":[{\"name\":\"username\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the user account on Twitter.com\"},{\"name\":\"tweet\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The content of the user's Twitter message\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Unix epoch time in seconds\"}],\"doc:\":\"A basic schema for storing Twitter messages\"}");


  /** Name of the user account on Twitter.com */
  @Deprecated  var username: java.lang.String=  _;
  /** The content of the user's Twitter message */
  @Deprecated  var tweet: java.lang.String =_;
  /** Unix epoch time in seconds */
  @Deprecated var timestamp: Long = _;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
//   twitter_schema() {}

  /**
   * All-args constructor.
   */
//   twitter_schema(java.lang.String username, java.lang.String tweet, java.lang.Long timestamp) {
//    this.username = username;
//    this.tweet = tweet;
//    this.timestamp = timestamp;
//  }



   def getSchema(): org.apache.avro.Schema  =  {  SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  def get(field$: Int): Any = {
    field$ match  {
    case 0 => username;
    case 1 => tweet;
    case 2 => timestamp;
    case _ => throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 

  //@SuppressWarnings(value="unchecked")
  def put(field$: Int, value$: java.lang.Object ): Unit = {
    field$ match {
    case 0 => username = value$.asInstanceOf[String];
    case 1 => tweet = value$.asInstanceOf[String]; 
    case 2 => timestamp = value$.asInstanceOf[Long]; 
    case _ => throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }



  /**
   * Gets the value of the 'username' field.
   * Name of the user account on Twitter.com   */
//   java.lang.String getUsername() {
//    return username;
//  }

  /**
   * Sets the value of the 'username' field.
   * Name of the user account on Twitter.com   * @param value the value to set.
   */
//   void setUsername(java.lang.String value) {
//    this.username = value;
//  }

  /**
   * Gets the value of the 'tweet' field.
   * The content of the user's Twitter message   */
//   java.lang.String getTweet() {
//    return tweet;
//  }

  /**
   * Sets the value of the 'tweet' field.
   * The content of the user's Twitter message   * @param value the value to set.
   */
//   void setTweet(java.lang.String value) {
//    this.tweet = value;
//  }

  /**
   * Gets the value of the 'timestamp' field.
   * Unix epoch time in seconds   */
//   java.lang.Long getTimestamp() {
//    return timestamp;
//  }

  /**
   * Sets the value of the 'timestamp' field.
   * Unix epoch time in seconds   * @param value the value to set.
   */
//   void setTimestamp(java.lang.Long value) {
//    this.timestamp = value;
//  }

  /** Creates a new twitter_schema RecordBuilder */
//   static com.miguno.avro.twitter_schema.Builder newBuilder() {
//    return new com.miguno.avro.twitter_schema.Builder();
//  }
  
  /** Creates a new twitter_schema RecordBuilder by copying an existing Builder */
//   static com.miguno.avro.twitter_schema.Builder newBuilder(com.miguno.avro.twitter_schema.Builder other) {
//    return new com.miguno.avro.twitter_schema.Builder(other);
//  }
  
  /** Creates a new twitter_schema RecordBuilder by copying an existing twitter_schema instance */
//   static com.miguno.avro.twitter_schema.Builder newBuilder(com.miguno.avro.twitter_schema other) {
//    return new com.miguno.avro.twitter_schema.Builder(other);
//  }
  
  /**
   * RecordBuilder for twitter_schema instances.
   */
    object Builder extends org.apache.avro.specific.SpecificRecordBuilderBase[twitter_schema]
    with org.apache.avro.data.RecordBuilder[twitter_schema] {
 
    

    private var username: java.lang.String = _;
    private var tweet: java.lang.String = _;
    private var timestamp: Long = _;
def apply() = new
    /** Creates a new Builder */
  //  private Builder() {
 //     super(com.miguno.avro.twitter_schema.SCHEMA$);
 //   }
   



 
    /** Creates a Builder by copying an existing Builder */

    private case class Builder(other: com.miguno.avro.twitter_schema.Builder ) extends Builder(other) {
      //super(other);
      if (isValidValue(fields()(0), other.username)) {
        this.username = data().deepCopy(fields()(0).schema(), other.username);
        fieldSetFlags()(0) = true;
      }
      if (isValidValue(fields()(1), other.tweet)) {
        this.tweet = data().deepCopy(fields()(1).schema(), other.tweet);
        fieldSetFlags()(1) = true;
      }
      if (isValidValue(fields()(2), other.timestamp)) {
        this.timestamp = data().deepCopy(fields()(2).schema(), other.timestamp);
        fieldSetFlags()(2) = true;
      }
    }
    


    /** Creates a Builder by copying an existing twitter_schema instance */

    private def Builder(other: com.miguno.avro.twitter_schema){ //extends Builder(com.miguno.avro.twitter_schema.SCHEMA$){
      SpecificRecord(SCHEMA$)      //super(com.miguno.avro.twitter_schema.SCHEMA$);
      if (isValidValue(fields()(0), other.username)) {
        this.username = data().deepCopy(fields()(0).schema(), other.username);
        fieldSetFlags()(0) = true;
      }
      if (isValidValue(fields()(1), other.tweet)) {
        this.tweet = data().deepCopy(fields()(1).schema(), other.tweet);
        fieldSetFlags()(1) = true;
      }
      if (isValidValue(fields()(2), other.timestamp)) {
        this.timestamp = data().deepCopy(fields()(2).schema(), other.timestamp);
        fieldSetFlags()(2) = true;
      }
    }



    /** Gets the value of the 'username' field */
//     java.lang.String getUsername() {
//      return username;
//    }
    
    /** Sets the value of the 'username' field */
//     com.miguno.avro.twitter_schema.Builder setUsername(java.lang.String value) {
//      validate(fields()(0), value);
//      this.username = value;
//      fieldSetFlags()(0) = true;
//      return this; 
//    }
    
    /** Checks whether the 'username' field has been set */
//     boolean hasUsername() {
 //     return fieldSetFlags()(0);
//    }
    
    /** Clears the value of the 'username' field */
//     com.miguno.avro.twitter_schema.Builder clearUsername() {
//      username = null;
//      fieldSetFlags()(0) = false;
//      return this;
//    }

//    /** Gets the value of the 'tweet' field */
//     java.lang.String getTweet() {
//      return tweet;
//    }
    
//    /** Sets the value of the 'tweet' field */
//     com.miguno.avro.twitter_schema.Builder setTweet(java.lang.String value) {
//      validate(fields()(1), value);
//      this.tweet = value;
//      fieldSetFlags()(1) = true;
//      return this; 
//    }
    
    /** Checks whether the 'tweet' field has been set */
//     boolean hasTweet() {
//      return fieldSetFlags()(1);
//    }
    
    /** Clears the value of the 'tweet' field */
//     com.miguno.avro.twitter_schema.Builder clearTweet() {
//      tweet = null;
//      fieldSetFlags()(1) = false;
//      return this;
//    }

    /** Gets the value of the 'timestamp' field */
//     java.lang.Long getTimestamp() {
//      return timestamp;
//    }
    
//    /** Sets the value of the 'timestamp' field */
//     com.miguno.avro.twitter_schema.Builder setTimestamp(long value) {
//      validate(fields()(2), value);
//      this.timestamp = value;
//      fieldSetFlags()(2) = true;
//      return this; 
//    }
    
//    /** Checks whether the 'timestamp' field has been set */
//     boolean hasTimestamp() {
//      return fieldSetFlags()(2);
//    }
    
    /** Clears the value of the 'timestamp' field */
//     com.miguno.avro.twitter_schema.Builder clearTimestamp() {
//      fieldSetFlags()(2) = false;
//      return this;
//    }

    @Override
     def build(): twitter_schema = {
      try {
        twitter_schema record = new twitter_schema();
//        record.username = fieldSetFlags()(0) ? this.username : (java.lang.String) defaultValue(fields()(0));
        record.username = fieldSetFlags()(0) ? this.username : (java.lang.String) defaultValue(fields);
//        record.tweet = fieldSetFlags()(1) ? this.tweet : (java.lang.String) defaultValue(fields()(1));
        record.tweet = fieldSetFlags()(1) ? this.tweet : (java.lang.String) defaultValue(fields);
        record.timestamp = fieldSetFlags()(2) ? this.timestamp : (java.lang.Long) defaultValue(fields);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
